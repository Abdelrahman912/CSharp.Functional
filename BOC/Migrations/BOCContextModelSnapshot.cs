// <auto-generated />
using BOC.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BOC.Migrations
{
    [DbContext(typeof(BOCContext))]
    partial class BOCContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BOC.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BOC.Models.AccountState", b =>
                {
                    b.Property<int>("AccountStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountStateId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("NewBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OldBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Process")
                        .HasColumnType("int");

                    b.Property<decimal>("ProcessAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AccountStateId");

                    b.HasIndex("AccountId");

                    b.ToTable("AccountStates");
                });

            modelBuilder.Entity("BOC.Models.AccountState", b =>
                {
                    b.HasOne("BOC.Models.Account", "Account")
                        .WithMany("States")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("BOC.Models.Account", b =>
                {
                    b.Navigation("States");
                });
#pragma warning restore 612, 618
        }
    }
}
