// <auto-generated />
using System;
using BOC.Core.Data.SqlEventStore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BOC.Core.Migrations
{
    [DbContext(typeof(BOCContext))]
    [Migration("20220909015412_currencycode")]
    partial class currencycode
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BOC.Core.Events.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Event");
                });

            modelBuilder.Entity("BOC.Core.Events.CreatedAccount", b =>
                {
                    b.HasBaseType("BOC.Core.Events.Event");

                    b.Property<int>("Currency")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("CreatedAccount");
                });

            modelBuilder.Entity("BOC.Core.Events.DebitedTransfer", b =>
                {
                    b.HasBaseType("BOC.Core.Events.Event");

                    b.Property<string>("Beneficiary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DebitedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Iban")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("DebitedTransfer");
                });

            modelBuilder.Entity("BOC.Core.Events.DepositedCash", b =>
                {
                    b.HasBaseType("BOC.Core.Events.Event");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("uniqueidentifier");

                    b.HasDiscriminator().HasValue("DepositedCash");
                });

            modelBuilder.Entity("BOC.Core.Events.FrozeAccount", b =>
                {
                    b.HasBaseType("BOC.Core.Events.Event");

                    b.HasDiscriminator().HasValue("FrozeAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
